// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto

package jt.chat.grpc;

/**
 * <pre>
 * Response to be sent by the host to a join request
 * It contains all the information for a room
 * </pre>
 *
 * Protobuf type {@code chat.JoinRoomResponse}
 */
public  final class JoinRoomResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:chat.JoinRoomResponse)
    JoinRoomResponseOrBuilder {
  // Use JoinRoomResponse.newBuilder() to construct.
  private JoinRoomResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private JoinRoomResponse() {
    isPasswordRequired_ = false;
    user_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private JoinRoomResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            isPasswordRequired_ = input.readBool();
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              user_ = new java.util.ArrayList<jt.chat.grpc.User>();
              mutable_bitField0_ |= 0x00000002;
            }
            user_.add(
                input.readMessage(jt.chat.grpc.User.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        user_ = java.util.Collections.unmodifiableList(user_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return jt.chat.grpc.Protocol.internal_static_chat_JoinRoomResponse_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return jt.chat.grpc.Protocol.internal_static_chat_JoinRoomResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            jt.chat.grpc.JoinRoomResponse.class, jt.chat.grpc.JoinRoomResponse.Builder.class);
  }

  private int bitField0_;
  public static final int IS_PASSWORD_REQUIRED_FIELD_NUMBER = 1;
  private boolean isPasswordRequired_;
  /**
   * <pre>
   * whether or not this room requires a password to enter
   * </pre>
   *
   * <code>bool is_password_required = 1;</code>
   */
  public boolean getIsPasswordRequired() {
    return isPasswordRequired_;
  }

  public static final int USER_FIELD_NUMBER = 2;
  private java.util.List<jt.chat.grpc.User> user_;
  /**
   * <pre>
   * list of all users in this room
   * only available if there are no errors when joining
   * </pre>
   *
   * <code>repeated .chat.User user = 2;</code>
   */
  public java.util.List<jt.chat.grpc.User> getUserList() {
    return user_;
  }
  /**
   * <pre>
   * list of all users in this room
   * only available if there are no errors when joining
   * </pre>
   *
   * <code>repeated .chat.User user = 2;</code>
   */
  public java.util.List<? extends jt.chat.grpc.UserOrBuilder> 
      getUserOrBuilderList() {
    return user_;
  }
  /**
   * <pre>
   * list of all users in this room
   * only available if there are no errors when joining
   * </pre>
   *
   * <code>repeated .chat.User user = 2;</code>
   */
  public int getUserCount() {
    return user_.size();
  }
  /**
   * <pre>
   * list of all users in this room
   * only available if there are no errors when joining
   * </pre>
   *
   * <code>repeated .chat.User user = 2;</code>
   */
  public jt.chat.grpc.User getUser(int index) {
    return user_.get(index);
  }
  /**
   * <pre>
   * list of all users in this room
   * only available if there are no errors when joining
   * </pre>
   *
   * <code>repeated .chat.User user = 2;</code>
   */
  public jt.chat.grpc.UserOrBuilder getUserOrBuilder(
      int index) {
    return user_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (isPasswordRequired_ != false) {
      output.writeBool(1, isPasswordRequired_);
    }
    for (int i = 0; i < user_.size(); i++) {
      output.writeMessage(2, user_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (isPasswordRequired_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, isPasswordRequired_);
    }
    for (int i = 0; i < user_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, user_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof jt.chat.grpc.JoinRoomResponse)) {
      return super.equals(obj);
    }
    jt.chat.grpc.JoinRoomResponse other = (jt.chat.grpc.JoinRoomResponse) obj;

    boolean result = true;
    result = result && (getIsPasswordRequired()
        == other.getIsPasswordRequired());
    result = result && getUserList()
        .equals(other.getUserList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + IS_PASSWORD_REQUIRED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsPasswordRequired());
    if (getUserCount() > 0) {
      hash = (37 * hash) + USER_FIELD_NUMBER;
      hash = (53 * hash) + getUserList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static jt.chat.grpc.JoinRoomResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static jt.chat.grpc.JoinRoomResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static jt.chat.grpc.JoinRoomResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static jt.chat.grpc.JoinRoomResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static jt.chat.grpc.JoinRoomResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static jt.chat.grpc.JoinRoomResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static jt.chat.grpc.JoinRoomResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static jt.chat.grpc.JoinRoomResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static jt.chat.grpc.JoinRoomResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static jt.chat.grpc.JoinRoomResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static jt.chat.grpc.JoinRoomResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static jt.chat.grpc.JoinRoomResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(jt.chat.grpc.JoinRoomResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Response to be sent by the host to a join request
   * It contains all the information for a room
   * </pre>
   *
   * Protobuf type {@code chat.JoinRoomResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:chat.JoinRoomResponse)
      jt.chat.grpc.JoinRoomResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jt.chat.grpc.Protocol.internal_static_chat_JoinRoomResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jt.chat.grpc.Protocol.internal_static_chat_JoinRoomResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              jt.chat.grpc.JoinRoomResponse.class, jt.chat.grpc.JoinRoomResponse.Builder.class);
    }

    // Construct using jt.chat.grpc.JoinRoomResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getUserFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      isPasswordRequired_ = false;

      if (userBuilder_ == null) {
        user_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        userBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return jt.chat.grpc.Protocol.internal_static_chat_JoinRoomResponse_descriptor;
    }

    public jt.chat.grpc.JoinRoomResponse getDefaultInstanceForType() {
      return jt.chat.grpc.JoinRoomResponse.getDefaultInstance();
    }

    public jt.chat.grpc.JoinRoomResponse build() {
      jt.chat.grpc.JoinRoomResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public jt.chat.grpc.JoinRoomResponse buildPartial() {
      jt.chat.grpc.JoinRoomResponse result = new jt.chat.grpc.JoinRoomResponse(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.isPasswordRequired_ = isPasswordRequired_;
      if (userBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          user_ = java.util.Collections.unmodifiableList(user_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.user_ = user_;
      } else {
        result.user_ = userBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof jt.chat.grpc.JoinRoomResponse) {
        return mergeFrom((jt.chat.grpc.JoinRoomResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(jt.chat.grpc.JoinRoomResponse other) {
      if (other == jt.chat.grpc.JoinRoomResponse.getDefaultInstance()) return this;
      if (other.getIsPasswordRequired() != false) {
        setIsPasswordRequired(other.getIsPasswordRequired());
      }
      if (userBuilder_ == null) {
        if (!other.user_.isEmpty()) {
          if (user_.isEmpty()) {
            user_ = other.user_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureUserIsMutable();
            user_.addAll(other.user_);
          }
          onChanged();
        }
      } else {
        if (!other.user_.isEmpty()) {
          if (userBuilder_.isEmpty()) {
            userBuilder_.dispose();
            userBuilder_ = null;
            user_ = other.user_;
            bitField0_ = (bitField0_ & ~0x00000002);
            userBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getUserFieldBuilder() : null;
          } else {
            userBuilder_.addAllMessages(other.user_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      jt.chat.grpc.JoinRoomResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (jt.chat.grpc.JoinRoomResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private boolean isPasswordRequired_ ;
    /**
     * <pre>
     * whether or not this room requires a password to enter
     * </pre>
     *
     * <code>bool is_password_required = 1;</code>
     */
    public boolean getIsPasswordRequired() {
      return isPasswordRequired_;
    }
    /**
     * <pre>
     * whether or not this room requires a password to enter
     * </pre>
     *
     * <code>bool is_password_required = 1;</code>
     */
    public Builder setIsPasswordRequired(boolean value) {
      
      isPasswordRequired_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * whether or not this room requires a password to enter
     * </pre>
     *
     * <code>bool is_password_required = 1;</code>
     */
    public Builder clearIsPasswordRequired() {
      
      isPasswordRequired_ = false;
      onChanged();
      return this;
    }

    private java.util.List<jt.chat.grpc.User> user_ =
      java.util.Collections.emptyList();
    private void ensureUserIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        user_ = new java.util.ArrayList<jt.chat.grpc.User>(user_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        jt.chat.grpc.User, jt.chat.grpc.User.Builder, jt.chat.grpc.UserOrBuilder> userBuilder_;

    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public java.util.List<jt.chat.grpc.User> getUserList() {
      if (userBuilder_ == null) {
        return java.util.Collections.unmodifiableList(user_);
      } else {
        return userBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public int getUserCount() {
      if (userBuilder_ == null) {
        return user_.size();
      } else {
        return userBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public jt.chat.grpc.User getUser(int index) {
      if (userBuilder_ == null) {
        return user_.get(index);
      } else {
        return userBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public Builder setUser(
        int index, jt.chat.grpc.User value) {
      if (userBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserIsMutable();
        user_.set(index, value);
        onChanged();
      } else {
        userBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public Builder setUser(
        int index, jt.chat.grpc.User.Builder builderForValue) {
      if (userBuilder_ == null) {
        ensureUserIsMutable();
        user_.set(index, builderForValue.build());
        onChanged();
      } else {
        userBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public Builder addUser(jt.chat.grpc.User value) {
      if (userBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserIsMutable();
        user_.add(value);
        onChanged();
      } else {
        userBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public Builder addUser(
        int index, jt.chat.grpc.User value) {
      if (userBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserIsMutable();
        user_.add(index, value);
        onChanged();
      } else {
        userBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public Builder addUser(
        jt.chat.grpc.User.Builder builderForValue) {
      if (userBuilder_ == null) {
        ensureUserIsMutable();
        user_.add(builderForValue.build());
        onChanged();
      } else {
        userBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public Builder addUser(
        int index, jt.chat.grpc.User.Builder builderForValue) {
      if (userBuilder_ == null) {
        ensureUserIsMutable();
        user_.add(index, builderForValue.build());
        onChanged();
      } else {
        userBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public Builder addAllUser(
        java.lang.Iterable<? extends jt.chat.grpc.User> values) {
      if (userBuilder_ == null) {
        ensureUserIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, user_);
        onChanged();
      } else {
        userBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public Builder clearUser() {
      if (userBuilder_ == null) {
        user_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        userBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public Builder removeUser(int index) {
      if (userBuilder_ == null) {
        ensureUserIsMutable();
        user_.remove(index);
        onChanged();
      } else {
        userBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public jt.chat.grpc.User.Builder getUserBuilder(
        int index) {
      return getUserFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public jt.chat.grpc.UserOrBuilder getUserOrBuilder(
        int index) {
      if (userBuilder_ == null) {
        return user_.get(index);  } else {
        return userBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public java.util.List<? extends jt.chat.grpc.UserOrBuilder> 
         getUserOrBuilderList() {
      if (userBuilder_ != null) {
        return userBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(user_);
      }
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public jt.chat.grpc.User.Builder addUserBuilder() {
      return getUserFieldBuilder().addBuilder(
          jt.chat.grpc.User.getDefaultInstance());
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public jt.chat.grpc.User.Builder addUserBuilder(
        int index) {
      return getUserFieldBuilder().addBuilder(
          index, jt.chat.grpc.User.getDefaultInstance());
    }
    /**
     * <pre>
     * list of all users in this room
     * only available if there are no errors when joining
     * </pre>
     *
     * <code>repeated .chat.User user = 2;</code>
     */
    public java.util.List<jt.chat.grpc.User.Builder> 
         getUserBuilderList() {
      return getUserFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        jt.chat.grpc.User, jt.chat.grpc.User.Builder, jt.chat.grpc.UserOrBuilder> 
        getUserFieldBuilder() {
      if (userBuilder_ == null) {
        userBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            jt.chat.grpc.User, jt.chat.grpc.User.Builder, jt.chat.grpc.UserOrBuilder>(
                user_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        user_ = null;
      }
      return userBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:chat.JoinRoomResponse)
  }

  // @@protoc_insertion_point(class_scope:chat.JoinRoomResponse)
  private static final jt.chat.grpc.JoinRoomResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new jt.chat.grpc.JoinRoomResponse();
  }

  public static jt.chat.grpc.JoinRoomResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<JoinRoomResponse>
      PARSER = new com.google.protobuf.AbstractParser<JoinRoomResponse>() {
    public JoinRoomResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new JoinRoomResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<JoinRoomResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<JoinRoomResponse> getParserForType() {
    return PARSER;
  }

  public jt.chat.grpc.JoinRoomResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

